# -*- coding: utf-8 -*-
"""Naive-Bayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kEeja8RV9lEacQMxoMvDpRD-OL8HNqLB
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, precision_score, precision_score, precision_recall_fscore_support, confusion_matrix
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
import seaborn as sns

"""###FOR THE DATASET 4###"""

df = pd.read_csv("/content/Surgical-deepnet.csv")

df.head()

df.describe()

df.isnull()

f,ax = plt.subplots(figsize=(14, 14))
sns.heatmap(df.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)

df.info()

X = df.iloc[:, :-1]
Y = df.iloc[:, -1:]

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

clf = GaussianNB()
clf.fit(x_train, y_train)

y_pred = clf.predict(x_test)
acc = accuracy_score(y_test, y_pred)
print('Naive Bayes')
print('Accuracy = ' + str(acc))
rslt = precision_recall_fscore_support(y_test, y_pred, average=None, labels=[0,1])
print('Precision = '+ str(rslt[0][0]))
print('Recall = '+ str(rslt[1][0]))
print('F_beta Score = '+ str(rslt[2][0]))

print('Precision = '+ str(rslt[0][1]))
print('Recall = '+ str(rslt[1][1]))
print('F_beta Score = '+ str(rslt[2][1]))
cm = confusion_matrix(y_test,clf.predict(x_test))
print(cm)

